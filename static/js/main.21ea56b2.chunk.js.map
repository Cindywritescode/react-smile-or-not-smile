{"version":3,"sources":["components/Lip.jsx","components/Eye.jsx","components/UI/Box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Lip","happinessLevel","LipSvg","viewBox","d","styled","svg","Eye","EyeBall","div","Box","props","flex","direction","justify","align","Container","App","date","Date","day","getDay","dailyHappiness","today","firstOfJan","getFullYear","numberOfDays","Math","floor","getWeek","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAEaA,EAAM,SAAC,GAAD,IAAEC,EAAF,EAAEA,eAAF,OACf,cAACC,EAAD,CAAQC,QAAQ,aAAhB,SACI,sBAAMC,EAAC,cAAS,GAAK,EAAIH,EAAiB,EAAnC,iBAA6C,EAAIA,EAAjD,eAAsE,GAAK,EAAIA,EAAiB,QAIzGC,EAASG,IAAOC,IAAV,2KCNCC,EAAM,kBACf,cAACC,EAAD,KAGEA,EAAUH,IAAOI,IAAV,4GCJAC,EAAML,IAAOI,IAAV,kIAEN,SAAAE,GAAK,OAAIA,EAAMC,MAAQ,KACb,SAAAD,GAAK,OAAIA,EAAME,WAAa,SAC3B,SAAAF,GAAK,OAAIA,EAAMG,SAAW,YAC9B,SAAAH,GAAK,OAAIA,EAAMI,OAAS,YC2BnCC,EAAYX,IAAOI,IAAV,6FAMAQ,EA5BH,WACR,IAAMC,EAAO,IAAIC,KACXC,EAAwB,IAAlBF,EAAKG,SAAiB,EAAIH,EAAKG,SAErCC,EAAgC,GAX1B,WACZ,IAAMC,EAAQ,IAAIJ,KACZK,EAAa,IAAIL,KAAKI,EAAME,cAAe,EAAG,GAC9CC,EAAeC,KAAKC,OAAOL,EAAQC,GAAT,OAChC,OAAOG,KAAKC,MAAMF,EAAe,GAMpBG,GACkBT,GAAW,GAG1C,OACI,cAACJ,EAAD,UACI,eAACN,EAAD,CAAKG,UAAU,SAAf,UACI,eAACH,EAAD,CAAKG,UAAU,MAAMC,QAAQ,gBAA7B,UACI,cAACJ,EAAD,CAAKI,QAAQ,SAASC,MAAM,SAA5B,SAAqC,cAAC,EAAD,MACrC,cAACL,EAAD,CAAKI,QAAQ,SAASC,MAAM,SAA5B,SAAqC,cAAC,EAAD,SAEzC,cAACL,EAAD,CAAKI,QAAQ,SAASC,MAAM,SAA5B,SACI,cAAC,EAAD,CAAKd,eAAgBqB,YCf1BQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.21ea56b2.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Lip = ({happinessLevel}) => (\n    <LipSvg viewBox=\"0 0 100 30\">\n        <path d={`M 5 ${30 - 2 * happinessLevel - 5} Q 50,${3 * happinessLevel} 95,${30 - 2 * happinessLevel - 5}`}/>\n    </LipSvg>\n)\n\nconst LipSvg = styled.svg`\n  width: 50vw;\n  height: 50vw/4;\n\n  path {\n    fill: none;\n    stroke: black;\n    stroke-width: 0.9vh;\n    stroke-linecap: round;\n  }\n`","import styled from \"styled-components\";\n\nexport const Eye = () => (\n    <EyeBall/>\n)\n\nconst EyeBall = styled.div`\n  background: black;\n  width: 14vw;\n  height: 14vw;\n  border-radius: 25rem;\n`","import styled from \"styled-components\";\n\nexport const Box = styled.div`\n  display: flex;\n  flex: ${props => props.flex || 1};\n  flex-direction: ${props => props.direction || 'row'};\n  justify-content: ${props => props.justify || 'normal'};\n  align-items: ${props => props.align || 'normal'};\n`","import styled from \"styled-components\";\nimport {Lip} from \"./components/Lip\";\nimport {Eye} from \"./components/Eye\";\nimport {Box} from \"./components/UI/Box\";\n\nconst getWeek = () => {\n    const today = new Date()\n    const firstOfJan = new Date(today.getFullYear(), 0, 1);\n    const numberOfDays = Math.floor((today - firstOfJan) / (24 * 60 * 60 * 1000));\n    return Math.floor(numberOfDays / 7);\n}\n\nconst App = () => {\n    const date = new Date();\n    const day = date.getDay() === 0 ? 7 : date.getDay();\n    const week = getWeek();\n    const dailyHappiness = (week + day) * 7 % 10;\n    // console.log(dailyHappiness);\n\n    return (\n        <Container>\n            <Box direction='column'>\n                <Box direction='row' justify='space-between'>\n                    <Box justify='center' align='center'><Eye/></Box>\n                    <Box justify='center' align='center'><Eye/></Box>\n                </Box>\n                <Box justify='center' align='center'>\n                    <Lip happinessLevel={dailyHappiness}/>\n                </Box>\n            </Box>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-grow: 1;\n  background-color: #f6d87a;\n`\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}