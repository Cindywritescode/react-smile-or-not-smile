{"version":3,"sources":["components/Lip.jsx","components/Eye.jsx","components/UI/Box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Lip","happinessLevel","LipSvg","viewBox","d","calculatePath","attributeName","from","to","dur","level","styled","svg","Eye","orientation","x","scale","Math","sin","PI","y","cos","retinaX","retinaY","EyeSvg","EyeBall","cx","cy","r","EyeRetina","values","Array","fill","map","_","i","join","sequenceY","circle","Box","div","props","flex","direction","justify","align","Container","App","date","Date","day","getDay","week","today","firstOfJan","getFullYear","numberOfDays","floor","getWeek","dailyHappiness","dailyEye","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad6813fb.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Lip = ({happinessLevel = 5}) => (\n    <LipSvg viewBox=\"0 0 100 30\">\n        <path d={calculatePath(happinessLevel)}>\n            <animate attributeName='d' from={calculatePath(5)} to={calculatePath(happinessLevel)} dur='1s'/>\n        </path>\n    </LipSvg>\n)\n\nexport const calculatePath = (level) => `M 5 ${30 - 2 * level - 5} Q 50,${3 * level} 95,${30 - 2 * level - 5}`\n\nconst LipSvg = styled.svg`\n  width: 50vw;\n  height: 50vw/4;\n\n  path {\n    fill: none;\n    stroke: black;\n    stroke-width: 0.9vh;\n    stroke-linecap: round;\n  }\n`","import styled from \"styled-components\";\n\nexport const Eye = ({orientation = 100}) => {\n    const x = (scale) => 50 + 25 * Math.sin(2 * Math.PI * scale / 100)\n    const y = (scale) => 50 - 25 * Math.cos(2 * Math.PI * scale / 100)\n    const sequenceX = (to) => new Array(to + 1).fill(0).map((_, i) => x(i)).join(';')\n    const sequenceY = (to) => new Array(to + 1).fill(0).map((_, i) => y(i)).join(';')\n    const retinaX = x(orientation)\n    const retinaY = y(orientation)\n\n    return (\n        <EyeSvg viewBox=\"0 0 100 100\">\n            <EyeBall cx=\"50\" cy=\"50\" r=\"50\"/>\n            <EyeRetina\n                cx={retinaX}\n                cy={retinaY}\n                r=\"20\">\n                <animate attributeName=\"cx\" values={sequenceX(orientation)} dur={`${50*orientation}ms`}/>\n                <animate attributeName=\"cy\" values={sequenceY(orientation)} dur={`${50*orientation}ms`}/>\n            </EyeRetina>\n        </EyeSvg>\n    )\n}\n\nconst EyeSvg = styled.svg`\n  width: 14vw;\n  height: 14vw;\n`\n\nconst EyeBall = styled.circle`\n  fill: black;\n`\n\nconst EyeRetina = styled.circle`\n  fill: white;\n`\n","import styled from \"styled-components\";\n\nexport const Box = styled.div`\n  display: flex;\n  flex: ${props => props.flex || 1};\n  flex-direction: ${props => props.direction || 'row'};\n  justify-content: ${props => props.justify || 'normal'};\n  align-items: ${props => props.align || 'normal'};\n`","import styled from \"styled-components\";\nimport {Lip} from \"./components/Lip\";\nimport {Eye} from \"./components/Eye\";\nimport {Box} from \"./components/UI/Box\";\n\nconst getWeek = () => {\n    const today = new Date()\n    const firstOfJan = new Date(today.getFullYear(), 0, 1);\n    const numberOfDays = Math.floor((today - firstOfJan) / (24 * 60 * 60 * 1000));\n    return Math.floor(numberOfDays / 7);\n}\n\nconst App = () => {\n    const date = new Date();\n    const day = date.getDay() === 0 ? 7 : date.getDay();\n    const week = getWeek();\n    const dailyHappiness = ((week + day) * 7) % 10;\n    const dailyEye = (week * day * 7 * 11) % 100;\n\n    return (\n        <Container>\n            <Box direction='column'>\n                <Box direction='row' justify='space-between'>\n                    <Box justify='center' align='center'><Eye orientation={dailyEye}/></Box>\n                    <Box justify='center' align='center'><Eye orientation={dailyEye}/></Box>\n                </Box>\n                <Box justify='center' align='center'>\n                    <Lip happinessLevel={dailyHappiness}/>\n                </Box>\n            </Box>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-grow: 1;\n  background-color: #f6d87a;\n`\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}